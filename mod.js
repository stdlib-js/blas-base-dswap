// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;e=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var f,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(r,e)||l.call(r,e)?(f=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=f):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&i&&i.call(r,e,t.set),r};function f(r,e,t,n,o){var a,i,u,l,f,c;if(r<=0)return n;if(1===t&&1===o){if((l=r%3)>0)for(f=0;f<l;f++)a=e[f],e[f]=n[f],n[f]=a;if(r<3)return n;for(f=l;f<r;f+=3)a=e[f],e[f]=n[f],n[f]=a,a=e[c=f+1],e[c]=n[c],n[c]=a,a=e[c+=1],e[c]=n[c],n[c]=a;return n}for(i=t<0?(1-r)*t:0,u=o<0?(1-r)*o:0,f=0;f<r;f++)a=e[i],e[i]=n[u],n[u]=a,i+=t,u+=o;return n}function c(r,e,t,n,o,a,i){var u,l,f,c,_;if(r<=0)return o;if(l=n,f=i,1===t&&1===a){if((c=r%3)>0)for(_=0;_<c;_++)u=e[l],e[l]=o[f],o[f]=u,l+=t,f+=a;if(r<3)return o;for(_=c;_<r;_+=3)u=e[l],e[l]=o[f],o[f]=u,u=e[l+1],e[l+1]=o[f+1],o[f+1]=u,u=e[l+2],e[l+2]=o[f+2],o[f+2]=u,l+=3,f+=3;return o}for(_=0;_<r;_++)u=e[l],e[l]=o[f],o[f]=u,l+=t,f+=a;return o}e(f,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:c});export{f as default,c as ndarray};
//# sourceMappingURL=mod.js.map
